 1	#include <sys/types.h> /* socket() を使うために必要*/
 2	#include <sys/socket.h> /* 同上 */
 3	#include <netinet/in.h> /* INET ドメインのソケットを使うために必要*/
 4	#include <arpa/inet.h> /* 同上 */
 5	#include <netdb.h>
 6	#include <stdio.h>
 7	#include <string.h>
 8	#include <stdlib.h>
 9	#include <unistd.h>
10	#define PORT 10120
11
12	int main(int argc, char **argv) {
13	  int sock;
14	  char str[1024], receive[1024];
15	  struct sockaddr_in host;
16	  struct hostent *hp;
17
18	  /* コマンド引数が1つであることを確認 */
19	  if(argc != 2) {
20	    fprintf(stderr, "usage: %s host\n", argv[0]);
21	    exit(1);
22	  }
23
24	  /* ソケットの生成 */
25	  if((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0) {
26	    perror("client: socket");
27	    exit(1);
28	  }
29
30	  /*
31	   * host構造体に接続するサーバーのアドレス・ポート番号を設定
32	   */
33
34	  bzero((char *)&host, sizeof(host));
35	  host.sin_family = AF_INET;
36	  host.sin_port = htons(PORT);
37
38	  if((hp = gethostbyname(argv[1])) == NULL) {
39	    fprintf(stderr, "unkown host %s\n", argv[1]);
40	    close(sock);
41	    exit(1);
42	  }
43	  bcopy(hp->h_addr, &host.sin_addr, hp->h_length);
44
45	  /* ソケットをサーバに接続 */
46	  if (connect(sock, (struct sockaddr *)&host, sizeof(host)) > 0) {
47	    perror("client: connect");
48	    close(sock);
49	    exit(1);
50	  }
51
52	memset(str, '\0', sizeof(str));
53
54	while (read(0, str, sizeof(str)) > 0) {
55	  memset(receive, '\0', sizeof(receive));
56	  if(write(sock, str, sizeof(str)) < 0) {
57	    perror("write");
58	    exit(1);
59	  }
60
61	  while (read(sock, receive, sizeof(receive)) < 0) {
62	    perror("read");
63	  }
64	    write(1, receive, sizeof(receive));
65	  // printf("%s\n", receive);
66	}
67
68	  /* ソケットをクローズ */
69	  close(sock);
70	}
